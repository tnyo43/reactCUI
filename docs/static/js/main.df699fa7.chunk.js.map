{"version":3,"sources":["CommandHistory.tsx","CommandInput.tsx","entry/entry.ts","execute.ts","entry/file.ts","entry/directory.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["CommandHistory","props","history","map","data","className","username","entry","getName","command","result","CommandInput","state","escapedCommand","index","onKeyDown","bind","event","keyCode","this","executeCommand","setState","length","Math","max","min","onChange","value","target","React","Component","FileTreatmentError","msg","Object","setPrototypeOf","prototype","Error","Entry","_parent","parent","_entry","pwd","replace","_name","_command","_content","ExecuteCommand","_username","args","current","getRoot","path","split","filter","x","p","cd","e","message","ls","join","mkdir","get","cat","words","slice","File","name","content","Directory","directory","push","forEach","newdir","add","sort","root","App","exec","product","documents","poem","edit","photo","memo","note","directoryTree","execute","concat","dir","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.df699fa7.chunk.js","sourcesContent":["import React from 'react';\nimport { Result } from './execute';\n\ninterface CommandHistoryProps {\n    history: Array<Result>\n}\n\nconst CommandHistory: React.FC<CommandHistoryProps> = (props: CommandHistoryProps) => {\n    return (\n        <div>\n            {props.history.map(data =>\n                <>\n                    <div className=\"cli-text\">\n                        <span className=\"user-span\">{data.username}</span>\n                        <span className=\"dir-span\">{`${data.entry.getName()} $`}</span>\n                        <span>{data.command}</span>\n                    </div>\n                    <div className=\"cli-text\">\n                        {data.result}\n                    </div>\n                </>\n            )}\n        </div>\n    );\n}\n\n\nexport default CommandHistory;\n","import React from 'react';\nimport Entry from './entry/entry'\n\ninterface CommandInputProps {\n    username: string,\n    entry: Entry,\n\thistory: Array<string>\n    executeCommand: (command: string) => void\n}\n\ninterface CommandInputState {\n    command: string,\n    escapedCommand: string,\n    index: number\n}\n\nclass CommandInput extends React.Component<CommandInputProps, CommandInputState> {\n    constructor(props: CommandInputProps) {\n        super(props);\n\n        this.state = {\n            command: \"\",\n            escapedCommand: \"\",\n            index: 0,\n        };\n\n        this.onKeyDown = this.onKeyDown.bind(this);\n    }\n\n    onKeyDown(event: React.KeyboardEvent<HTMLInputElement>) {\n        let index: number;\n        let escapedCommand: string;\n        switch (event.keyCode) {\n            case 13: // Enter key\n                this.props.executeCommand(this.state.command);\n                this.setState({\n                    command: \"\",\n                    escapedCommand: \"\",\n                    index: this.props.history.length\n                });\n                break;\n\n            case 38: // ArrowUp key\n                escapedCommand =\n                    (this.state.index === this.props.history.length)\n                        ? this.state.command : this.state.escapedCommand;\n                index = Math.max(0, this.state.index - 1);\n                this.setState({\n                    command: this.props.history[index],\n                    escapedCommand: escapedCommand,\n                    index: index\n                });\n                break;\n\n            case 40: // ArrowDown key\n                index = Math.min(this.props.history.length, this.state.index + 1);\n                this.setState({\n                    command: (index === this.props.history.length)? this.state.escapedCommand : this.props.history[index],\n                    index: index\n                });\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"input-div\">\n                <span className=\"user-span\">{this.props.username}</span>\n                <span className=\"dir-span\">{`${this.props.entry.getName()} $`}</span>\n                <input\n                    className=\"cli-input\"\n                    onChange={value => this.setState({command: value.target.value})}\n                    value={this.state.command}\n                    onKeyDown={this.onKeyDown}\n                />\n            </div>\n        );\n    }\n}\n\n\nexport default CommandInput;\n","export class FileTreatmentError extends Error {\n\tconstructor(msg: string) {\n\t\tsuper(msg);\n\t\tObject.setPrototypeOf(this, FileTreatmentError.prototype);\n\t}\n}\n\nexport default abstract class Entry {\n\tprivate _parent: Entry | null;\n\n\tconstructor() {\n\t\tthis._parent = null;\n\t}\n\n\tpublic abstract getName(): string;\n\n\tpublic get parent() {\n\t\treturn this._parent;\n\t}\n\n\tpublic set parent(parent: Entry | null) {\n\t\tthis._parent = parent;\n\t}\n\n\tpublic getRoot(): Entry {\n\t\tlet entry: Entry = this;\n\t\twhile (entry.parent !== null) entry = entry.parent;\n\t\treturn entry;\n\t}\n\n\tpublic add(_entry: Entry): Entry {\n\t\tthrow new FileTreatmentError(\"this Entry is NOT able to executable \\\"add\\\"\");\n\t}\n\n\tpublic pwd(): string {\n\t\tconst name = ((this.parent === null) ? \"\" : this.parent.pwd()) + \"/\" + this.getName();\n\t\treturn name.replace(\"//\", \"/\");\n\t}\n\n\tpublic mkdir(_name: string): Entry {\n\t\tthrow new FileTreatmentError(\"this Entry is NOT able to executable \\\"mkdir\\\"\");\n\t}\n\n\tpublic get(_name: string, _command: string): Entry {\n\t\tthrow new FileTreatmentError(\"this Entry is NOT able to executable \\\"get\\\"\");\n\t}\n\n\tpublic cd(_name: string): Entry {\n\t\tthrow new FileTreatmentError(\"this Entry is NOT able to executable \\\"cd\\\"\");\n\t}\n\n\tpublic ls(): Array<string> {\n\t\tthrow new FileTreatmentError(\"this Entry is NOT able to executable \\\"ls\\\"\");\n\t}\n\n\tpublic edit(_content: string) {\n\t\tthrow new FileTreatmentError(\"this Entry is NOT able to executable \\\"edit\\\"\");\n\t}\n\n\tpublic cat(): string {\n\t\tthrow new FileTreatmentError(\"this Entry is NOT able to executable \\\"cat\\\"\");\n\t}\n}\n","import Entry, { FileTreatmentError } from './entry/entry';\n\nexport interface Result {\n    username: string,\n    entry: Entry,\n    command: string,\n    result: string | null\n}\n\nexport default class ExecuteCommand {\n\tprivate _username: string;\n\tprivate entry: Entry;\n\n\tconstructor(username: string, entry: Entry) {\n\t\tthis._username = username;\n\t\tthis.entry = entry;\n\t}\n\n\tprivate pwd(command: string): Result {\n\t\treturn {\n\t\t\tusername: this._username,\n\t\t\tentry: this.entry,\n\t\t\tcommand: command,\n\t\t\tresult: this.entry.pwd()\n\t\t};\n\t}\n\n\tprivate cd(args: Array<string>, command: string): Result {\n\t\tconst current = this.entry;\n\t\tif (args.length === 0) {\n\t\t\tthis.entry = this.entry.getRoot();\n\t\t\twhile (this.entry.parent !== null) this.entry = this.entry.parent;\n\t\t\treturn {\n\t\t\t\tusername: this._username,\n\t\t\t\tentry: current,\n\t\t\t\tcommand: command,\n\t\t\t\tresult: null\n\t\t\t};\n\t\t}\n\n\t\tlet result: string | null = null;\n\n\t\tif (args[0] === \"..\") {\n\t\t\tthis.entry = (this.entry.parent) ? this.entry.parent : this.entry;\n\t\t} else {\n\t\t\tconst path = args[0].split(\"/\").filter(x => x !== \"\");\n\t\t\ttry {\n\t\t\t\tfor (let p of path) {\n\t\t\t\t\tthis.entry = this.entry.cd(p);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tif (e instanceof FileTreatmentError) {\n\t\t\t\t\tthis.entry = current;\n\t\t\t\t\tresult = e.message;\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tusername: this._username,\n\t\t\tentry: current,\n\t\t\tcommand: command,\n\t\t\tresult: result\n\t\t};\n\t}\n\n\tprivate ls(command: string): Result {\n\t\treturn {\n\t\t\tusername: this._username,\n\t\t\tentry: this.entry,\n\t\t\tcommand: command,\n\t\t\tresult: this.entry.ls().join(\"\\n\")\n\t\t};\n\t}\n\n\tprivate mkdir(args: Array<string>, command: string): Result {\n\t\tif (args.length === 0) {\n\t\t\treturn {\n\t\t\t\tusername: this._username,\n\t\t\t\tentry: this.entry,\n\t\t\t\tcommand: command,\n\t\t\t\tresult: \"usage: mkdir directory\"\n\t\t\t};\n\t\t}\n\n\t\tlet result: string | null = null;\n\n\t\ttry {\n\t\t\tthis.entry.mkdir(args[0]);\n\t\t} catch (e) {\n\t\t\tif (e instanceof FileTreatmentError) {\n\t\t\t\tresult = e.message;\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tusername: this._username,\n\t\t\tentry: this.entry,\n\t\t\tcommand: command,\n\t\t\tresult: result\n\t\t};\n\t}\n\n\tprivate cat(args: Array<string>, command: string): Result {\n\t\tif (args.length === 0) {\n\t\t\treturn {\n\t\t\t\tusername: this._username,\n\t\t\t\tentry: this.entry,\n\t\t\t\tcommand: command,\n\t\t\t\tresult: \"usage: cat file\"\n\t\t\t};\n\t\t}\n\n\t\tlet result: string | null = null;\n\n\t\ttry {\n\t\t\tresult = this.entry.get(args[0], \"cat\").cat();\n\t\t} catch (e) {\n\t\t\tif (e instanceof FileTreatmentError) {\n\t\t\t\tresult = e.message;\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tusername: this._username,\n\t\t\tentry: this.entry,\n\t\t\tcommand: command,\n\t\t\tresult: result\n\t\t};\n\t}\n\n\tpublic execute(command: string): Result {\n\t\tconst words = command.split(\" \").filter(x => x !== '');\n\t\tif (words.length === 0) {\n\t\t\treturn {\n\t\t\t\tusername: this._username,\n\t\t\t\tentry: this.entry,\n\t\t\t\tcommand: command,\n\t\t\t\tresult: null\n\t\t\t};\n\t\t}\n\n\t\tconst args = words.slice(1);\n\n\t\tswitch (words[0]) {\n\t\t\tcase \"pwd\":\n\t\t\t\treturn this.pwd(command);\n\n\t\t\tcase \"cd\":\n\t\t\t\treturn this.cd(args, command);\n\n\t\t\tcase \"ls\":\n\t\t\t\treturn this.ls(command);\n\n\t\t\tcase \"mkdir\":\n\t\t\t\treturn this.mkdir(args, command);\n\n\t\t\tcase \"cat\":\n\t\t\t\treturn this.cat(args, command);\n\n\t\t\tdefault:\n\t\t\t\treturn {\n\t\t\t\t\tusername: this._username,\n\t\t\t\t\tentry: this.entry,\n\t\t\t\t\tcommand: command,\n\t\t\t\t\tresult: `command not found: ${words[0]}`\n\t\t\t\t};\n\t\t}\n\n\t}\n\n\tget username() {\n\t\treturn this._username;\n\t}\n\n\tget dir() {\n\t\treturn this.entry;\n\t}\n}\n","import Entry from './entry';\n\nexport default class File extends Entry {\n\tprivate name: string;\n\tprivate content: string;\n\n\tconstructor(name: string) {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.content = \"\";\n\t}\n\n\tpublic edit(content: string) {\n\t\tthis.content = content\n\t}\n\n\tpublic cat() {\n\t\treturn this.content;\n\t}\n\n\tpublic getName() {\n\t\treturn this.name;\n\t}\n}\n","import Entry, { FileTreatmentError } from './entry';\n\nexport default class Directory extends Entry {\n\tprivate name: string;\n\tprivate directory: Array<Entry>;\n\n\tconstructor(name: string) {\n\t\tsuper();\n\t\tif (name === \"\") {\n\t\t\tthrow new FileTreatmentError(`directory with empty name is invalid`);\n\t\t}\n\t\tthis.name = name;\n\t\tthis.directory = [];\n\t}\n\n\tpublic static root() {\n\t\treturn (() => {\n\t\t\tconst root = new Directory(\"root\");\n\t\t\troot.name = \"\";\n\t\t\treturn root;\n\t\t})();\n\t}\n\n\tpublic add(entry: Entry): Entry {\n\t\tthis.directory.push(entry);\n\t\tentry.parent = this;\n\t\treturn entry;\n\t}\n\n\tpublic mkdir(name: string): Entry {\n\t\tthis.directory.forEach(entry => {\n\t\t\tif (entry.getName() === name) {\n\t\t\t\tthrow new FileTreatmentError(`mkdir: ${name}: File exists`);\n\t\t\t}\n\t\t});\n\t\tconst newdir = new Directory(name)\n\t\tthis.add(newdir);\n\t\treturn newdir;\n\t}\n\n\tpublic get(name: string, command: string = \"get\"): Entry {\n\t\tfor (let entry of this.directory) {\n\t\t\tif (entry.getName() !== name) \n\t\t\t\tcontinue;\n\n\t\t\treturn entry;\n\t\t}\n\t\tthrow new FileTreatmentError(`${command}: no such file or directory: ${name}`);\n\t}\n\n\tpublic cd(name: string): Entry {\n\t\tconst entry = this.get(name, \"cd\");\n\t\tif (entry instanceof Directory) {\n\t\t\treturn entry;\n\t\t} else {\n\t\t\tthrow new FileTreatmentError(`cd: not a directory: ${name}`);\n\t\t}\n\t}\n\n\tpublic ls(): Array<string> {\n\t\treturn this.directory.map(e => e.getName()).sort();\n\t}\n\n\tpublic cat(): string {\n\t\tthrow new FileTreatmentError(`cat: ${this.getName()}: Is a directory`);\n\t}\n\n\tpublic getName() {\n\t\treturn this.name;\n\t}\n}\n","import React from 'react';\nimport CommandHistory from './CommandHistory';\nimport CommandInput from './CommandInput';\nimport ExecuteCommand, { Result } from './execute';\nimport File from './entry/file';\nimport Directory from './entry/directory';\nimport './App.css';\n\ninterface AppProps {\n}\n\ninterface AppState {\n\thistory: Array<Result>\n}\n\nconst directoryTree = () => {\n\tconst root = Directory.root();\n\tconst product = new Directory(\"product\");\n\tconst documents = new Directory(\"documents\");\n\troot.add(product);\n\troot.add(documents);\n\n\tconst poem = new File(\"poem.txt\");\n\tpoem.edit(\"poepoe poem\");\n\tconst photo = new File(\"photo.png\");\n\tproduct.add(poem);\n\tproduct.add(photo);\n\n\tconst memo = new File(\"memo.txt\");\n\tmemo.edit(\"memo is memorial\");\n\tconst note = new File(\"note.tex\");\n\tdocuments.add(memo);\n\tdocuments.add(note);\n\treturn root;\n}\n\nclass App extends React.Component<AppProps, AppState> {\n\tprivate exec: ExecuteCommand;\n\n\tconstructor(props: AppProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\thistory: []\n\t\t};\n\n\t\tthis.exec = new ExecuteCommand(\"tomoya\", directoryTree());\n\t\tthis.executeCommand = this.executeCommand.bind(this);\n\t}\n\n\texecuteCommand(command: string) {\n\t\tconst result = this.exec.execute(command);\n\t\tthis.setState({\n\t\t\thistory: this.state.history.concat([result])\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<CommandHistory history={this.state.history}/>\n\t\t\t\t<CommandInput\n\t\t\t\t\tusername={this.exec.username}\n\t\t\t\t\tentry={this.exec.dir}\n\t\t\t\t\thistory={this.state.history.map(result => result.command).filter(command => command.replace(/\\s/g, '').length > 0)}\n\t\t\t\t\texecuteCommand={this.executeCommand}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(\n\t\t\tprocess.env.PUBLIC_URL,\n\t\t\twindow.location.href\n\t\t);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}