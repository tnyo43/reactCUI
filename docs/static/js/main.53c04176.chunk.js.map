{"version":3,"sources":["CommandHistory.tsx","CommandInput.tsx","entry/entry.ts","entry/file.ts","entry/directory.ts","mode/executeCommand.ts","mode/executeVim.ts","mode/context.ts","Vim.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["CommandHistory","props","history","map","data","className","username","entry","getName","command","result","r","CommandInput","inputRef","state","escapedCommand","index","onKeyDown","bind","React","createRef","event","keyCode","this","executeCommand","setState","length","Math","max","min","current","focus","ref","onChange","value","target","Component","FileTreatmentError","msg","Object","setPrototypeOf","prototype","Error","Entry","_parent","parent","_entry","pwd","replace","_name","_command","_content","File","name","content","Directory","directory","push","forEach","newdir","add","get","e","sort","root","ExecuteCommand","_context","_username","args","getRoot","path","split","filter","x","p","cd","message","ls","mkdir","concat","cat","filename","setVim","changeMode","words","slice","help","vim","singleton","execute","ExecuteVim","_file","_text","mode","colon","_cursor","txt","cursor","substring","h","w","indexOf","edit","text","join","s","ori","console","log","commandKeyDown","colonKeyDown","insertKeyDown","splitTextByEnter","delete","insertText","key","executeColon","file","c","Context","executeVim","getInstance","setFile","dir","cxt","Vim","exec","context","getMode","forceRenderCallback","tabIndex","getModeText","style","top","left","getcursorChar","App","handleClick","product","documents","poem","photo","memo","note","directoryTree","getExecute","forceUpdate","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.53c04176.chunk.js","sourcesContent":["import React from 'react';\nimport { Result } from './mode/executeCommand';\n\ninterface CommandHistoryProps {\n    history: Array<Result>\n}\n\nconst CommandHistory: React.FC<CommandHistoryProps> = (props: CommandHistoryProps) => {\n    return (\n        <div>\n            {props.history.map(data =>\n                <>\n                    <div className=\"cli-text\">\n                        <span className=\"user-span\">{data.username}</span>\n                        <span className=\"dir-span\">{`${data.entry.getName()} $`}</span>\n                        <span>{data.command}</span>\n                    </div>\n                    <div className=\"cli-result\">\n                        {data.result.map(r => <div>{r}</div>)}\n                    </div>\n                </>\n            )}\n        </div>\n    );\n}\n\n\nexport default CommandHistory;\n","import React from 'react';\nimport Entry from './entry/entry'\n\ninterface CommandInputProps {\n    username: string,\n    entry: Entry,\n\thistory: Array<string>\n    executeCommand: (command: string) => void\n}\n\ninterface CommandInputState {\n    command: string,\n    escapedCommand: string,\n    index: number\n}\n\nclass CommandInput extends React.Component<CommandInputProps, CommandInputState> {\n    private inputRef: React.RefObject<HTMLInputElement>\n\n    constructor(props: CommandInputProps) {\n        super(props);\n\n        this.state = {\n            command: \"\",\n            escapedCommand: \"\",\n            index: 0,\n        };\n\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.inputRef = React.createRef();\n    }\n\n    onKeyDown(event: React.KeyboardEvent<HTMLInputElement>) {\n        let index: number;\n        let escapedCommand: string;\n        switch (event.keyCode) {\n            case 13: // Enter key\n                this.props.executeCommand(this.state.command);\n                this.setState({\n                    command: \"\",\n                    escapedCommand: \"\",\n                    index: this.props.history.length\n                });\n                break;\n\n            case 38: // ArrowUp key\n                escapedCommand =\n                    (this.state.index === this.props.history.length)\n                        ? this.state.command : this.state.escapedCommand;\n                index = Math.max(0, this.state.index - 1);\n                this.setState({\n                    command: this.props.history[index],\n                    escapedCommand: escapedCommand,\n                    index: index\n                });\n                break;\n\n            case 40: // ArrowDown key\n                index = Math.min(this.props.history.length, this.state.index + 1);\n                this.setState({\n                    command: (index === this.props.history.length)? this.state.escapedCommand : this.props.history[index],\n                    index: index\n                });\n                break;\n        }\n    }\n\n    focus() {\n\t\tif (this.inputRef.current) {\n\t\t\tthis.inputRef.current.focus();\n\t\t}\n    }\n\n    render() {\n        return (\n            <div className=\"input-div\">\n                <span className=\"user-span\">{this.props.username}</span>\n                <span className=\"dir-span\">{`${this.props.entry.getName()} $`}</span>\n                <input\n                    ref={this.inputRef}\n                    className=\"cli-input\"\n                    onChange={value => this.setState({command: value.target.value})}\n                    value={this.state.command}\n                    onKeyDown={this.onKeyDown}\n                />\n            </div>\n        );\n    }\n}\n\n\nexport default CommandInput;\n","export class FileTreatmentError extends Error {\n\tconstructor(msg: string) {\n\t\tsuper(msg);\n\t\tObject.setPrototypeOf(this, FileTreatmentError.prototype);\n\t}\n}\n\nexport default abstract class Entry {\n\tprivate _parent: Entry | null;\n\n\tconstructor() {\n\t\tthis._parent = null;\n\t}\n\n\tpublic abstract getName(): string;\n\n\tpublic get parent() {\n\t\treturn this._parent;\n\t}\n\n\tpublic set parent(parent: Entry | null) {\n\t\tthis._parent = parent;\n\t}\n\n\tpublic getRoot(): Entry {\n\t\tlet entry: Entry = this;\n\t\twhile (entry.parent !== null) entry = entry.parent;\n\t\treturn entry;\n\t}\n\n\tpublic add(_entry: Entry): Entry {\n\t\tthrow new FileTreatmentError(\"this Entry is NOT able to executable \\\"add\\\"\");\n\t}\n\n\tpublic pwd(): string {\n\t\tconst name = ((this.parent === null) ? \"\" : this.parent.pwd()) + \"/\" + this.getName();\n\t\treturn name.replace(\"//\", \"/\");\n\t}\n\n\tpublic mkdir(_name: string): Entry {\n\t\tthrow new FileTreatmentError(\"this Entry is NOT able to executable \\\"mkdir\\\"\");\n\t}\n\n\tpublic get(_name: string, _command: string): Entry {\n\t\tthrow new FileTreatmentError(\"this Entry is NOT able to executable \\\"get\\\"\");\n\t}\n\n\tpublic cd(_name: string): Entry {\n\t\tthrow new FileTreatmentError(\"this Entry is NOT able to executable \\\"cd\\\"\");\n\t}\n\n\tpublic ls(): Array<string> {\n\t\tthrow new FileTreatmentError(\"this Entry is NOT able to executable \\\"ls\\\"\");\n\t}\n\n\tpublic edit(_content: string) {\n\t\tthrow new FileTreatmentError(\"this Entry is NOT able to executable \\\"edit\\\"\");\n\t}\n\n\tpublic cat(): string {\n\t\tthrow new FileTreatmentError(\"this Entry is NOT able to executable \\\"cat\\\"\");\n\t}\n}\n","import Entry from './entry';\n\nexport default class File extends Entry {\n\tprivate name: string;\n\tprivate content: string;\n\n\tconstructor(name: string) {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.content = \"\";\n\t}\n\n\tpublic edit(content: string) {\n\t\tthis.content = content\n\t}\n\n\tpublic cat() {\n\t\treturn this.content;\n\t}\n\n\tpublic getName() {\n\t\treturn this.name;\n\t}\n}\n","import Entry, { FileTreatmentError } from './entry';\n\nexport default class Directory extends Entry {\n\tprivate name: string;\n\tprivate directory: Array<Entry>;\n\n\tconstructor(name: string) {\n\t\tsuper();\n\t\tif (name === \"\") {\n\t\t\tthrow new FileTreatmentError(`directory with empty name is invalid`);\n\t\t}\n\t\tthis.name = name;\n\t\tthis.directory = [];\n\t}\n\n\tpublic static root() {\n\t\treturn (() => {\n\t\t\tconst root = new Directory(\"root\");\n\t\t\troot.name = \"\";\n\t\t\treturn root;\n\t\t})();\n\t}\n\n\tpublic add(entry: Entry): Entry {\n\t\tthis.directory.push(entry);\n\t\tentry.parent = this;\n\t\treturn entry;\n\t}\n\n\tpublic mkdir(name: string): Entry {\n\t\tthis.directory.forEach(entry => {\n\t\t\tif (entry.getName() === name) {\n\t\t\t\tthrow new FileTreatmentError(`mkdir: ${name}: File exists`);\n\t\t\t}\n\t\t});\n\t\tconst newdir = new Directory(name)\n\t\tthis.add(newdir);\n\t\treturn newdir;\n\t}\n\n\tpublic get(name: string, command: string = \"get\"): Entry {\n\t\tfor (let entry of this.directory) {\n\t\t\tif (entry.getName() !== name) \n\t\t\t\tcontinue;\n\n\t\t\treturn entry;\n\t\t}\n\t\tthrow new FileTreatmentError(`${command}: no such file or directory: ${name}`);\n\t}\n\n\tpublic cd(name: string): Entry {\n\t\tconst entry = this.get(name, \"cd\");\n\t\tif (entry instanceof Directory) {\n\t\t\treturn entry;\n\t\t} else {\n\t\t\tthrow new FileTreatmentError(`cd: not a directory: ${name}`);\n\t\t}\n\t}\n\n\tpublic ls(): Array<string> {\n\t\treturn this.directory.map(e => e.getName()).sort();\n\t}\n\n\tpublic cat(): string {\n\t\tthrow new FileTreatmentError(`cat: ${this.getName()}: Is a directory`);\n\t}\n\n\tpublic getName() {\n\t\treturn this.name;\n\t}\n}\n","import Entry, { FileTreatmentError } from '../entry/entry';\nimport Execute from './execute';\nimport Context from './context';\nimport File from '../entry/file';\n\n\nexport interface Result {\n    username: string,\n    entry: Entry,\n    command: string,\n    result: Array<string>\n}\n\nexport default class ExecuteCommand implements Execute {\n\tprivate _username: string;\n\tprivate entry: Entry;\n\tprivate _context: Context;\n\n\tprivate constructor(_context: Context, username: string, entry: Entry) {\n\t\tthis._context = _context;\n\t\tthis._username = username;\n\t\tthis.entry = entry;\n\t}\n\n\tprivate static singleton: ExecuteCommand;\n\tpublic static getInstance(_context: Context, username: string, entry: Entry): ExecuteCommand {\n\t\tif (ExecuteCommand.singleton) {\n\t\t\treturn ExecuteCommand.singleton;\n\t\t} else {\n\t\t\tconst execute = new ExecuteCommand(_context, username, entry);\n\t\t\tExecuteCommand.singleton = execute;\n\t\t\treturn execute;\n\t\t}\n\t}\n\n\tprivate help(command: string): Result {\n\t\tconst result = [\n\t\t\t\"Basic commands\"\n\t\t\t,\"\"\n\t\t\t,\"pwd :show path of current directory.\"\n\t\t\t,\"cd [dir] :change directory.\"\n\t\t\t,\"ls :list segments.\"\n\t\t\t,\"mkdir [dir] :create new directory.\"\n\t\t\t,\"cat [file] :open txt or md files.\"\n\t\t\t,\"vim [file] :edit file with vim.\"\n\t\t]; \n\t\treturn {\n\t\t\tusername: this._username,\n\t\t\tentry: this.entry,\n\t\t\tcommand: command,\n\t\t\tresult: result\n\t\t};\n\t}\n\n\tprivate pwd(command: string): Result {\n\t\treturn {\n\t\t\tusername: this._username,\n\t\t\tentry: this.entry,\n\t\t\tcommand: command,\n\t\t\tresult: [this.entry.pwd()]\n\t\t};\n\t}\n\n\tprivate cd(args: Array<string>, command: string): Result {\n\t\tconst current = this.entry;\n\t\tif (args.length === 0) {\n\t\t\tthis.entry = this.entry.getRoot();\n\t\t\twhile (this.entry.parent !== null) this.entry = this.entry.parent;\n\t\t\treturn {\n\t\t\t\tusername: this._username,\n\t\t\t\tentry: current,\n\t\t\t\tcommand: command,\n\t\t\t\tresult: []\n\t\t\t};\n\t\t}\n\n\t\tlet result: Array<string> = [];\n\n\t\tif (args[0] === \"..\") {\n\t\t\tthis.entry = (this.entry.parent) ? this.entry.parent : this.entry;\n\t\t} else {\n\t\t\tconst path = args[0].split(\"/\").filter(x => x !== \"\");\n\t\t\ttry {\n\t\t\t\tfor (let p of path) {\n\t\t\t\t\tthis.entry = this.entry.cd(p);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tif (e instanceof FileTreatmentError) {\n\t\t\t\t\tthis.entry = current;\n\t\t\t\t\tresult.push(e.message);\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tusername: this._username,\n\t\t\tentry: current,\n\t\t\tcommand: command,\n\t\t\tresult: result\n\t\t};\n\t}\n\n\tprivate ls(command: string): Result {\n\t\treturn {\n\t\t\tusername: this._username,\n\t\t\tentry: this.entry,\n\t\t\tcommand: command,\n\t\t\tresult: this.entry.ls()\n\t\t};\n\t}\n\n\tprivate mkdir(args: Array<string>, command: string): Result {\n\t\tif (args.length === 0) {\n\t\t\treturn {\n\t\t\t\tusername: this._username,\n\t\t\t\tentry: this.entry,\n\t\t\t\tcommand: command,\n\t\t\t\tresult: [\"usage: mkdir directory\"]\n\t\t\t};\n\t\t}\n\n\t\tlet result: Array<string> = [];\n\n\t\ttry {\n\t\t\tthis.entry.mkdir(args[0]);\n\t\t} catch (e) {\n\t\t\tif (e instanceof FileTreatmentError) {\n\t\t\t\tresult.push(e.message);\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tusername: this._username,\n\t\t\tentry: this.entry,\n\t\t\tcommand: command,\n\t\t\tresult: result\n\t\t};\n\t}\n\n\tprivate cat(args: Array<string>, command: string): Result {\n\t\tif (args.length === 0) {\n\t\t\treturn {\n\t\t\t\tusername: this._username,\n\t\t\t\tentry: this.entry,\n\t\t\t\tcommand: command,\n\t\t\t\tresult: [\"usage: cat file\"]\n\t\t\t};\n\t\t}\n\n\t\tlet result: Array<string> = [];\n\n\t\ttry {\n\t\t\tresult = result.concat(this.entry.get(args[0], \"cat\").cat().split(\"\\n\"));\n\t\t} catch (e) {\n\t\t\tif (e instanceof FileTreatmentError) {\n\t\t\t\tresult.push(e.message);\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tusername: this._username,\n\t\t\tentry: this.entry,\n\t\t\tcommand: command,\n\t\t\tresult: result\n\t\t};\n\t}\n\n\tprivate vim(args: Array<string>, command: string): Result {\n\t\tconst filename = args[0];\n\n\t\tlet entry: Entry | null = null;\n\t\ttry {\n\t\t\tentry = this.entry.get(filename, \"vim\");\n\t\t} catch (e) {\n\t\t\tentry = new File(filename);\n\t\t}\n\n\t\tif (entry instanceof File) {\n\t\t\tthis._context.setVim(entry);\n\t\t\tthis._context.changeMode(\"vim\");\n\n\t\t\treturn {\n\t\t\t\tusername: this._username,\n\t\t\t\tentry: this.entry,\n\t\t\t\tcommand: command,\n\t\t\t\tresult: []\n\t\t\t};\n\t\t} else { // vim cannot edit directory\n\t\t\treturn {\n\t\t\t\tusername: this._username,\n\t\t\t\tentry: this.entry,\n\t\t\t\tcommand: command,\n\t\t\t\tresult: [`vim: ${this.entry.getName()}: Is a directory`]\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic execute(command: string): Result {\n\t\tconst words = command.split(\" \").filter(x => x !== '');\n\t\tif (words.length === 0) {\n\t\t\treturn {\n\t\t\t\tusername: this._username,\n\t\t\t\tentry: this.entry,\n\t\t\t\tcommand: command,\n\t\t\t\tresult: []\n\t\t\t};\n\t\t}\n\n\t\tconst args = words.slice(1);\n\n\t\tswitch (words[0]) {\n\t\t\tcase \"help\":\n\t\t\t\treturn this.help(command);\n\n\t\t\tcase \"pwd\":\n\t\t\t\treturn this.pwd(command);\n\n\t\t\tcase \"cd\":\n\t\t\t\treturn this.cd(args, command);\n\n\t\t\tcase \"ls\":\n\t\t\t\treturn this.ls(command);\n\n\t\t\tcase \"mkdir\":\n\t\t\t\treturn this.mkdir(args, command);\n\n\t\t\tcase \"cat\":\n\t\t\t\treturn this.cat(args, command);\n\n\t\t\tcase \"vim\":\n\t\t\t\treturn this.vim(args, command);\n\n\t\t\tdefault:\n\t\t\t\treturn {\n\t\t\t\t\tusername: this._username,\n\t\t\t\t\tentry: this.entry,\n\t\t\t\t\tcommand: command,\n\t\t\t\t\tresult: [`command not found: ${words[0]}`]\n\t\t\t\t};\n\t\t}\n\n\t}\n\n\tget username() {\n\t\treturn this._username;\n\t}\n\n\tget dir() {\n\t\treturn this.entry;\n\t}\n}\n","import Execute from './execute';\nimport Context from './context';\nimport File from '../entry/file'\nimport Entry from '../entry/entry';\nimport Directory from '../entry/directory';\n\n\ntype VimMode = \"insert\" | \"command\" | \"colon\"\n\nexport default class ExecuteVim implements Execute {\n\tprivate _context: Context;\n\tprivate _file: File;\n\tprivate entry: Entry;\n\tprivate _text: Array<string>;\n\tprivate mode: VimMode;\n\tprivate colon: string;\n\tprivate _cursor: [number, number];\n\n\tprivate constructor(_context: Context) {\n\t\tthis._context = _context;\n\t\tthis.entry = Directory.root();\n\t\tthis._file = new File(\"\");\n\t\tthis._text = [\"\"];\n\t\tthis.mode = \"command\";\n\t\tthis.colon = \"\";\n\t\tthis._cursor = [0, 0];\n\t}\n\n\tprivate static singleton: ExecuteVim;\n\tstatic getInstance(_context: Context): ExecuteVim {\n\t\tif (ExecuteVim.singleton) {\n\t\t\treturn ExecuteVim.singleton;\n\t\t} else {\n\t\t\tconst execute = new ExecuteVim(_context);\n\t\t\tExecuteVim.singleton = execute;\n\t\t\treturn execute;\n\t\t}\n\t}\n\n\tprivate splitTextByEnter() {\n\t\tlet txt = this._text.slice(0, this.cursor[0]);\n\t\tconst target = this._text[this.cursor[0]];\n\t\ttxt = txt.concat([\n\t\t\ttarget.substring(0, this.cursor[1]),\n\t\t\ttarget.substring(this.cursor[1], target.length)\n\t\t]);\n\t\ttxt = txt.concat(this._text.slice(this.cursor[0]+1));\n\t\tthis._text = txt;\n\t}\n\n\n\n\tprivate backCursor() {\n\t\tif (this._cursor[0] === 0) {\n\t\t\tthis.cursor = [0, this._cursor[1]-1];\n\t\t}\n\t\tif (this._cursor[1] === 0) {\n\t\t} else {\n\t\t}\n\t}\n\n\n\tprivate delete() {\n\t\tif (this._cursor[0] === 0 && this._cursor[1] === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst h = this._cursor[0], w = this._cursor[1];\n\t\tif (w === 0) {\n\t\t\tthis._cursor[0]--;\n\t\t\tthis._cursor[1] = this._text[this._cursor[0]].length;\n\n\t\t\tlet txt = this._text.slice(0, h-1);\n\t\t\ttxt.push(this._text[h-1] + this._text[h]);\n\t\t\ttxt = txt.concat(this._text.slice(h+1));\n\t\t\tthis._text = txt;\n\t\t} else {\n\t\t\tthis._cursor[1]--;\n\t\t\tthis._text[h] = this._text[h].slice(0, w-1).concat(this._text[h].slice(w));\n\t\t}\n\t}\n\n\tprivate executeColon() {\n\t\tif (this.colon.indexOf(\"w\") > -1) {\n\t\t\tif (this._file.parent !== this.entry) {\n\t\t\t\tthis.entry.add(this._file);\n\t\t\t}\n\t\t\tthis._file.edit(this.text.join(\"\\n\"));\n\t\t}\n\t\tif (this.colon.indexOf(\"q\") > -1) {\n\t\t\tthis._context.changeMode(\"normal\");\n\t\t\tthis.cursor = [0, 0];\n\t\t}\n\n\t\tthis.colon = \"\";\n\t}\n\n\tprivate insertText(s: string) {\n\t\tif (s.length !== 1) {\n\t\t\treturn;\n\t\t}\n\t\tconst h = this.cursor[0]\n\t\tconst w = this.cursor[1];\n\t\tconst ori = this._text[h];\n\t\tthis._text[h] = ori.slice(0, w) + s + ori.slice(w);\n\t}\n\n    public onKeyDown(event: React.KeyboardEvent<HTMLInputElement>): [number, number] {\n\t\tconsole.log(this);\n\t\tswitch (this.mode) {\n\t\t\tcase \"command\":\n\t\t\t\treturn this.commandKeyDown(event)\n\t\t\tcase \"colon\":\n\t\t\t\treturn this.colonKeyDown(event);\n\t\t\tcase \"insert\":\n\t\t\t\treturn this.insertKeyDown(event);\n\t\t}\n\t}\n\n\tprivate insertKeyDown(event: React.KeyboardEvent<HTMLInputElement>): [number, number] {\n        switch (event.keyCode) {\n\t\t\tcase 27: // Esc\n\t\t\t\tthis.mode = \"command\";\n\t\t\t\tbreak;\n\t\t\tcase 13: // Enter\n\t\t\t\tthis.splitTextByEnter();\n\t\t\t\tthis.cursor = [this._cursor[0]+1, 0];\n\t\t\t\tbreak;\n\t\t\tcase 8: // backspace\n\t\t\t\tthis.delete();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.insertText(event.key);\n\t\t\t\tthis.cursor = [this._cursor[0], this._cursor[1]+1];\n\t\t}\n\t\treturn this.cursor;\n\t}\n\n\tprivate commandKeyDown(event: React.KeyboardEvent<HTMLInputElement>): [number, number] {\n\t\tconsole.log(event.keyCode);\n        switch (event.keyCode) {\n\t\t\tcase 65: // a\n\t\t\t\tthis.mode = \"insert\";\n\t\t\t\tthis.cursor = [this._cursor[0], this._cursor[1]+1];\n\t\t\t\tbreak;\n\t\t\tcase 73: // i\n\t\t\t\tthis.mode = \"insert\";\n\t\t\t\tbreak;\n\t\t\tcase 72: // h\n\t\t\t\tthis.cursor = [this._cursor[0], this._cursor[1]-1];\n\t\t\t\tbreak;\n\t\t\tcase 74: // j\n\t\t\tcase 13: // Enter\n\t\t\t\tthis.cursor = [this._cursor[0]+1, this._cursor[1]];\n\t\t\t\tbreak;\n\t\t\tcase 75: // k\n\t\t\t\tthis.cursor = [this._cursor[0]-1, this._cursor[1]];\n\t\t\t\tbreak;\n\t\t\tcase 76: // l\n\t\t\t\tthis.cursor = [this._cursor[0], this._cursor[1]+1];\n\t\t\t\tbreak;\n\t\t\tcase 186: // : (colon)\n\t\t\t\tthis.mode = \"colon\";\n\t\t\t\tbreak;\n\t\t}\n\t\treturn this.cursor;\n\t}\n\n\tprivate colonKeyDown(event: React.KeyboardEvent<HTMLInputElement>): [number, number] {\n        switch (event.keyCode) {\n\t\t\tcase 13: // Enter\n\t\t\t\tthis.executeColon();\n\t\t\t\tthis.mode = \"command\";\n\t\t\t\tbreak;\n\t\t\tcase 81: // q\n\t\t\t\tthis.colon = this.colon + \"q\";\n\t\t\t\tbreak;\n\t\t\tcase 87: // w\n\t\t\t\tthis.colon += \"w\"\n\t\t\t\tbreak;\n\t\t}\n\t\treturn this.cursor;\n\t}\n\n\tpublic getModeText() {\n\t\tswitch (this.mode) {\n\t\t\tcase \"command\":\n\t\t\t\treturn \"-- COMMAND --\";\n\t\t\tcase \"colon\":\n\t\t\t\treturn \":\" + this.colon;\n\t\t\tcase \"insert\":\n\t\t\t\treturn \"-- INSERT --\";\n\t\t}\n\t}\n\n\tpublic getcursorChar() {\n\t\tconst h = this.cursor[0];\n\t\tconst w = this.cursor[1];\n\t\treturn (w >= this.text[h].length) ? \" \" : this.text[h][w];\n\t}\n\n\tsetFile(file: File, directory: Entry) {\n\t\tthis.entry = directory;\n\t\tthis._file = file;\n\t\tthis._text = file.cat().split(\"\\n\");\n\t}\n\n\tget file(): File {\n\t\treturn this._file;\n\t}\n\n\tget text(): Array<string> {\n\t\treturn this._text;\n\t}\n\n\tset cursor(c: [number, number]) {\n\t\tif (this._text.length === 0) {\n\t\t\tthis._cursor = [0, 0];\n\t\t}\n\t\tthis._cursor[0] = Math.max(0, Math.min(this._text.length-1, c[0]));\n\t\tthis._cursor[1] = Math.min(this._text[this._cursor[0]].length, Math.max(0, c[1]));\n\t}\n\n\tget cursor(): [number, number] {\n\t\treturn this._cursor;\n\t}\n}","import Execute from './execute';\nimport ExecuteCommand from './executeCommand';\nimport ExecuteVim from './executeVim';\n\nimport Entry from '../entry/entry';\nimport File from '../entry/file';\n\n\nexport type Mode = \"normal\" | \"vim\";\n\nexport default class Context {\n\tprivate mode: Mode;\n\tprivate executeCommand: ExecuteCommand;\n\tprivate executeVim: ExecuteVim;\n\n\tprivate constructor(username: string, entry: Entry) {\n\t\tthis.mode = \"normal\";\n\t\tthis.executeCommand = ExecuteCommand.getInstance(this, username, entry);\n\t\tthis.executeVim = ExecuteVim.getInstance(this);\n\t}\n\tprivate static singleton: Context;\n\tstatic getInstance(username: string, entry: Entry): Context {\n\t\tif (this.singleton) {\n\t\t\treturn this.singleton;\n\t\t} else {\n\t\t\tconst cxt = new Context(username, entry);\n\t\t\tthis.singleton = cxt;\n\t\t\treturn cxt;\n\t\t}\n\t}\n\n\tgetMode() {\n\t\treturn this.mode;\n\t}\n\n\tgetExecute(): Execute {\n\t\tconsole.log(this.mode);\n\t\tswitch (this.mode) {\n\t\t\tcase \"normal\":\n\t\t\t\treturn this.executeCommand;\n\t\t\tcase \"vim\":\n\t\t\t\treturn this.executeVim;\n\t\t}\n\t}\n\n\tsetVim(file: File) {\n\t\tthis.executeVim.setFile(file, this.executeCommand.dir);\n\t}\n\n\tchangeMode(mode: Mode) {\n\t\tconsole.log(`CHANGE MODE: ${this.mode} -> ${mode}`);\n\t\tthis.mode = mode;\n\t}\n}","import React from 'react';\n\nimport ExecuteVim from './mode/executeVim';\n\nimport './Vim.css';\nimport Context from './mode/context';\n\n\n\ninterface VimProps {\n\texec: ExecuteVim,\n\tcontext: Context,\n\tforceRenderCallback: () => void\n}\n\ninterface VimState {\n\tcursor: [number, number]\n}\n\n\nexport default class Vim extends React.Component<VimProps, VimState> {\n\tconstructor(props: VimProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcursor: this.props.exec.cursor\n\t\t};\n\n\t\tthis.onKeyDown = this.onKeyDown.bind(this);\n\t}\n\n\n\tonKeyDown(event: React.KeyboardEvent<HTMLInputElement>) {\n\t\tconst cursor = this.props.exec.onKeyDown(event);\n\t\tthis.setState({cursor: cursor});\n\t\tif (this.props.context.getMode() !== \"vim\") {\n\t\t\tthis.props.forceRenderCallback();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"vim-app\"\n\t\t\t\tonKeyDown={this.onKeyDown}\n\t\t\t\ttabIndex={0}\n\t\t\t>\n\t\t\t\t<div className=\"vim-app-edit-area\">\n\t\t\t\t\t{this.props.exec.text.map(r => <div>{r}</div>)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"vim-mode-text\">\n\t\t\t\t\t{this.props.exec.getModeText()}\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"vim-cursor\"\n\t\t\t\t\tstyle={{top: this.state.cursor[0]*29, left: this.state.cursor[1]*12.25}}\n\t\t\t\t>\n\t\t\t\t\t{this.props.exec.getcursorChar()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}","import React from 'react';\nimport CommandHistory from './CommandHistory';\nimport CommandInput from './CommandInput';\n\nimport File from './entry/file';\nimport Directory from './entry/directory';\n\nimport Context from './mode/context';\nimport ExecuteCommand, { Result } from './mode/executeCommand';\nimport ExecuteVim from './mode/executeVim';\n\nimport Vim from './Vim'\n\nimport './App.css';\n\n\ninterface AppState {\n\thistory: Array<Result>\n}\n\nconst directoryTree = () => {\n\tconst root = Directory.root();\n\tconst product = new Directory(\"product\");\n\tconst documents = new Directory(\"documents\");\n\troot.add(product);\n\troot.add(documents);\n\n\tconst poem = new File(\"poem.txt\");\n\tpoem.edit(\"poepoe poem\");\n\tconst photo = new File(\"photo.png\");\n\tproduct.add(poem);\n\tproduct.add(photo);\n\n\tconst memo = new File(\"memo.txt\");\n\tmemo.edit(\"memo is memorial\");\n\tconst note = new File(\"note.tex\");\n\tdocuments.add(memo);\n\tdocuments.add(note);\n\treturn root;\n}\n\nclass App extends React.Component<{}, AppState> {\n\tprivate _context: Context;\n\tprivate inputRef: React.RefObject<CommandInput>\n\n\tconstructor(props: {}) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\thistory: []\n\t\t};\n\n\t\tthis._context = Context.getInstance(\"tomoya\", directoryTree());\n\n\t\tthis.executeCommand = this.executeCommand.bind(this);\n\t\tthis.forceRenderCallback = this.forceRenderCallback.bind(this);\n\t\tthis.inputRef = React.createRef();\n\t}\n\n\texecuteCommand(command: string) {\n\t\tconst exec = this._context.getExecute();\n\t\tif (exec instanceof ExecuteCommand) {\n\t\t\tconst result = exec.execute(command);\n\t\t\tthis.setState({\n\t\t\t\thistory: this.state.history.concat([result])\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic handleClick = () => {\n\t\tif (this.inputRef.current) {\n\t\t\tthis.inputRef.current.focus();\n\t\t}\n\t}\n\n\tforceRenderCallback() {\n\t\tthis.forceUpdate();\n\t}\n\n\trender() {\n\t\tconst exec = this._context.getExecute();\n\n\t\tif (exec instanceof ExecuteCommand) {\n\t\t\treturn (\n\t\t\t\t<div className=\"App\" onClick={this.handleClick}>\n\t\t\t\t\t<div className=\"cli-result\">\n                        {\"type 'help' to show commands\"}\n                    </div>\n\t\t\t\t\t<CommandHistory history={this.state.history}/>\n\t\t\t\t\t<CommandInput\n\t\t\t\t\t\tref={this.inputRef}\n\t\t\t\t\t\tusername={exec.username}\n\t\t\t\t\t\tentry={exec.dir}\n\t\t\t\t\t\thistory={this.state.history.map(result => result.command).filter(command => command.replace(/\\s/g, '').length > 0)}\n\t\t\t\t\t\texecuteCommand={this.executeCommand}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (exec instanceof ExecuteVim) {\n\t\t\treturn (\n\t\t\t\t<Vim exec={exec} forceRenderCallback={this.forceRenderCallback} context={this._context}/>\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(\n\t\t\tprocess.env.PUBLIC_URL,\n\t\t\twindow.location.href\n\t\t);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}